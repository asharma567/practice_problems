'''
Sometimes, there is a need to output big symbols on the devices, which support only ASCII characters and single fixed-width fonts. 
The only way to do this is to use the pseudographics for drawing big symbols.

Here is an example of the font with digits from 0 to 9:

-**----*--***--***---*---****--**--****--**---**--
*--*--**-----*----*-*--*-*----*-------*-*--*-*--*-
*--*---*---**---**--****-***--***----*---**---***-
*--*---*--*-------*----*----*-*--*--*---*--*----*-
-**---***-****-***-----*-***---**---*----**---**--
--------------------------------------------------

'''



from collections import defaultdict
import sys 
import re

s = '''
-**----*--***--***---*---****--**--****--**---**--
*--*--**-----*----*-*--*-*----*-------*-*--*-*--*-
*--*---*---**---**--****-***--***----*---**---***-
*--*---*--*-------*----*----*-*--*--*---*--*----*-
-**---***-****-***-----*-***---**---*----**---**--
--------------------------------------------------
'''

if __name__ == '__main__':
    

    map_print = defaultdict(list)
    for j in xrange(1, 7):
        for i in xrange(0, 50, 5):
            map_print[i / 5].append(s.split('\n')[j][i:i + 4])
    
    with open(sys.argv[1]) as f:
        for input_string in f:
            parsed_string = re.findall(r'\d', input_string)
            for i in range(6):
                #print out all rows from the input
                print '-'.join([map_print[int(num)][i] for num in parsed_string])
